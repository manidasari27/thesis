name: Build and Push to ECR

on:
  push:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image-uri: ${{ steps.define-image.outputs.image-uri }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Define image URI
        id: define-image
        run: echo "image-uri=016278727232.dkr.ecr.us-east-1.amazonaws.com/x23301295-url-phishing:latest" >> $GITHUB_OUTPUT

  build-and-push:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ needs.setup.outputs.image-uri }} ./flaskwebapp

      - name: Push Docker image to ECR
        run: |
          docker push ${{ needs.setup.outputs.image-uri }}

  notify-success:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Notify completion
        run: echo "docker image successfully built and pushed to ECR!"
